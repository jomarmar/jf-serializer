#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.fringe.jf.json.JsonSerializer
	c63 [label=<<table title="org.fringe.jf.json.JsonSerializer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./JsonSerializer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JsonSerializer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JsonSerializer() </td></tr>
<tr><td align="left" balign="left"> + parse(json : String) : Object </td></tr>
<tr><td align="left" balign="left"> + parse(jsonFile : File) : Object </td></tr>
<tr><td align="left" balign="left"> + parse(jsonis : InputStream) : Object </td></tr>
<tr><td align="left" balign="left"> + serialize(obj : Object) : String </td></tr>
<tr><td align="left" balign="left"> + serializeToFile(obj : Object, file : String) </td></tr>
<tr><td align="left" balign="left"> + serializeToStream(obj : Object, os : OutputStream) </td></tr>
		</table></td></tr>
		</table>>, URL="./JsonSerializer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.fringe.jf.json.IJFSerializer
	c64 [label=<<table title="org.fringe.jf.json.IJFSerializer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./IJFSerializer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IJFSerializer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + parse(js : String) : Object </td></tr>
<tr><td align="left" balign="left"> + parse(f : File) : Object </td></tr>
<tr><td align="left" balign="left"> + parse(is : InputStream) : Object </td></tr>
<tr><td align="left" balign="left"> + serialize(obj : Object) : String </td></tr>
<tr><td align="left" balign="left"> + serializeToFile(obj : Object, file : String) </td></tr>
<tr><td align="left" balign="left"> + serializeToStream(obj : Object, os : OutputStream) </td></tr>
		</table></td></tr>
		</table>>, URL="./IJFSerializer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//org.fringe.jf.json.JsonSerializer implements org.fringe.jf.json.IJFSerializer
	c64:p -> c63:p [dir=back,arrowtail=empty,style=dashed];
}

